# -*- coding: utf-8 -*-
# utils.py
# Create your utils here.
import random, string
from django.core.exceptions import ObjectDoesNotExist 
from .models import BonusCountDay,BonusCountMonth,DiningTable,Consumer,PersonRecharge,SystemRecharge,VirtualMoney
from .models import Dining,Ticket, PersonBonus, SystemBonus, RcvBonus, BonusMessage, SystemMoney, PersonMoney
from .admin import null_person_bonus,null_system_bonus,null_dining_table,null_consumer,null_person_recharge,null_system_recharge,null_ticket,null_rcv_bonus

import pytz
from django.utils import timezone


#主键生成方法
def create_primary_key(key='1', length=9):
    a = list(string.digits)
    random.shuffle(a)   
    primary = key + ''.join(a[:length])
    return string.atoi(primary, 10)

#红包留言
def action_bonus_message(request):
	#从request中解析出openid,rcv_bonus_id,message
	#在BonusMessage表中创建一条记录
	#修改RcvBonus表中is_message==True
	pass
	
#红包婉拒
def action_bonus_refuse(request):
	#从request中解析出openid,rcv_bonus_id
	#根据rcv_bonus_id在表PersonMoney中找到婉拒的id_money。
	#在PersonRecharge表中创建一条记录
	pass

#微信支付
def action_weixin_pay(request):
	#支付成功，在PersonRecharge表中创建一条新纪录
	#在PersonMoney表中创建相应的记录
	#支付失败，在PersonBonus表删除一条openid的最新的记录
	pass
	
#创建消费券事件
def action_create_ticket(request):
	#从request中解析出openid
	#在Ticket表中创建一条新的记录
	#更新SystemMoney表中ticket字段
	#更新PersonMoney表中ticket字段
	pass


#抢红包事件
def action_get_bonus(openid):
	#抢系统红包：查询SystemBonus表中is_exhausted字段为false的记录，根据结果在RcvBonus表中创建记录，更新SystemMoney表中rcv_bonus字段
	#抢普通红包：查询PersonBonus表中to_table==tableId，根据tableId,查找DiningTable表中seats值，将红包平分，在RcvBonus表中创建记录，更新PersonMoney表中rcv_bonus字段
	#抢手气红包：查询PersonBonus表中bonus_type==手气红包&&is_exhausted==False的记录，根据结果在RcvBonus表中创建记录，更新PersonMoney表中rcv_bonus字段
	#返回抢到的红包个数
	'''bonus_num = 0	#统计抢到的红包个数
	consumer = Consumer.objects.get(open_id=openid)
	sys_bonus = SystemBonus.objects.filter(is_exhausted=false)
	if len(sys_bonus):
		for bonus in sys_bonus:
			rcv_bonus = RcvBonus.objects.filter(consumer=consumer,system_bonus=bonus)
			if len(rcv_bonus) == 0:
				sys_money = SystemMoney.objects.filter(bonus=bonus)
				get_num = random.randint(1, len(sys_money))
				key = create_primary_key()
				#rcv_bonus = RcvBonus.objects.create(id_bonus=key, person_bonus=, system_bonus=bonus, consumer=consumer, table=)
	
	for bonus in sys_bonus:
		try:
			rcv_bonus = RcvBonus.objects.get(consumer=consumer,system_bonus=bonus)
		except ObjectDoesNotExist:
			pass
	
	primary_key = create_primary_key()'''
		
	pass
	
#发普通红包事件
def action_set_common_bonus(request):
	#在PersonBonus表中创建一条记录
	#查询Consumer表中own_bonus_detail字段，判断是否需要微信支付
	#如果需要微信支付，计算出需要支付的金额，然后调用微信支付
	pass


#发手气红包事件
def action_set_random_bonus(request):
	#在PersonBonus表中创建一条记录
	#查询Consumer表中own_bonus_detail字段，判断是否需要微信支付
	#如果需要微信支付，计算出需要支付的金额，然后调用微信支付	
	pass

#发系统红包事件
def action_set_system_bonus(request):
	#查询settings.AUTH_USER_MODEL表中own_bonus_detail字段，判断是否需有足够的虚拟钱币
	#如果有足够的虚拟钱币，则在SystemBonus表中创建一条记录，否则提示今日系统红包已派完。
	#更新SystemMoney表中bonus字段值
	pass
	
